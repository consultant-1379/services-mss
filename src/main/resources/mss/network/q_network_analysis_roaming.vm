##-----------------------------------------------------------------------------
## Macro used to select columns from raw tables according to datetime range, 
## $columnsNotNull are not null, roaming = 1 and tac group is not EXCLUSIVE_TAC
##
## rawtables        list of raw tables to query
## rawview          result of this query will be called rawview
## columnsToIncludeInResult         columns to select from raw tables, and include in final view
## columnsNotNull  columns are not null
##-----------------------------------------------------------------------------
#macro (REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS_NOT_NULL_WITH_TAC_EXCLUSION_AND_ROAMING $rawtables $rawview $columnsToIncludeInResult $columnsNotNull)
    (
        #foreach ($rawtable in $rawtables)
            select
                #foreach ($columnToInclude in $columnsToIncludeInResult)
                    $columnToInclude
                    #if($velocityCount < $columnsToIncludeInResult.size())
                    ,
                    #end
                #end
            from dc.$rawtable 
            where
            #GET_DATETIME_RANGE() 
            and #GET_TAC_EXCLUSION()
            and roaming = 1 and EVENT_ID = 3
            #foreach ($columnNotNull in $columnsNotNull)
              and $columnNotNull is not null
            #end        
            #if($velocityCount < $rawtables.size())
                    union all
            #end
        #end
    ) 
    #if ($rawview != "")
      as $rawview
    #end
#end

##-----------------------------------------------------------------------------
## Macro used to generate Operator and Country table from DIM_E_SGEH_MCCMNC
## $table table name
## $isOpOrCountry is used for Operator or Country  
##-----------------------------------------------------------------------------
#macro (GET_OPERATOR_COUNTRY_TABLE $table $isOpOrCountry)
  #if ($isOpOrCountry == "OPERATOR")
    (select MCC, MNC, OPERATOR from dc.DIM_E_SGEH_MCCMNC) as $table
  #elseif ($isOpOrCountry == "COUNTRY")
    (select distinct MCC, COUNTRY from dc.DIM_E_SGEH_MCCMNC) as $table
  #end
#end

##-----------------------------------------------------------------------------
## template parameters
##-----------------------------------------------------------------------------
#if(${roamingobject} == $ApplicationConstants.TYPE_ROAMING_COUNTRY)
  #set($columnsToBeSelected = ["MCC"])
  #set($columnsToBeSelectedIMSI = ["MCC", "IMSI"])
  #set($op_or_country = "COUNTRY")
#elseif(${roamingobject} == $ApplicationConstants.TYPE_ROAMING_OPERATOR)
  #set($op_or_country = "OPERATOR")
  #set($columnsToBeSelected = ["MCC", "MNC"])  
  #set($columnsToBeSelectedIMSI = ["MCC", "MNC", "IMSI"]) 
#end
#set($romaing_analysis_count = 25) ## hard code



##-----------------------------------------------------------------------------
## SQL 
##-----------------------------------------------------------------------------
begin

select 
  top $romaing_analysis_count 
         $op_or_country, 
         isnull(dropped_call, 0) + isnull(blocked_call, 0) as errors, 
         isnull(suc_call, 0) as suc_call,  
         isnull(impacted_subscriber, 0) as impacted_subscriber
from 
(
  select #GET_NOT_NULL_COLUMN(["data_table", "imsi_table"] $columnsToBeSelected) blocked_call, dropped_call, suc_call, impacted_subscriber from 
  (
    select #GET_NOT_NULL_COLUMN(["error_table", "suc_table"] $columnsToBeSelected) blocked_call, dropped_call, suc_call from
    (
      select #GET_NOT_NULL_COLUMN(["blocked_table", "dropped_table"] $columnsToBeSelected) blocked_call, dropped_call from 
      (
        select #GET_COLUMNS($columnsToBeSelected) count(*) as blocked_call from 
          #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS_NOT_NULL_WITH_TAC_EXCLUSION_AND_ROAMING($techPackTables.getErrTables() "EVENT_E_MSS_VOICE_CDR_ERR_RAW" $columnsToBeSelected $columnsToBeSelected) 
            group by #GET_COLUMNS_NO_COMMA_TRAILING($columnsToBeSelected)
      ) as blocked_table 
      full outer join
      (
        select #GET_COLUMNS($columnsToBeSelected) count(*) as dropped_call from 
          #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS_NOT_NULL_WITH_TAC_EXCLUSION_AND_ROAMING($techPackTables.getErrTables("DROP_CALL") "EVENT_E_MSS_VOICE_CDR_DRPP_CALL_RAW" $columnsToBeSelected $columnsToBeSelected)
            group by #GET_COLUMNS_NO_COMMA_TRAILING($columnsToBeSelected)
      ) as dropped_table
      on #GET_JOIN("blocked_table" "dropped_table" $columnsToBeSelected)
    ) as error_table
    full outer join 
    (
      select #GET_COLUMNS($columnsToBeSelected) count(*) as suc_call from 
        #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS_NOT_NULL_WITH_TAC_EXCLUSION_AND_ROAMING($techPackTables.getSucTables() "EVENT_E_MSS_VOICE_CDR_SUC_RAW" $columnsToBeSelected $columnsToBeSelected) 
          group by #GET_COLUMNS_NO_COMMA_TRAILING($columnsToBeSelected)
    ) as suc_table
    on #GET_JOIN("error_table" "suc_table" $columnsToBeSelected)
    ) as data_table 
    full outer join 
    (
      select #GET_COLUMNS($columnsToBeSelected) count(distinct(IMSI)) as impacted_subscriber from
      (
        #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS_NOT_NULL_WITH_TAC_EXCLUSION_AND_ROAMING($techPackTables.getErrTables() "" $columnsToBeSelectedIMSI $columnsToBeSelected) 
        union all
        #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS_NOT_NULL_WITH_TAC_EXCLUSION_AND_ROAMING($techPackTables.getErrTables("DROP_CALL") "" $columnsToBeSelectedIMSI $columnsToBeSelected)
        union all
        #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_SPECIFY_COLUMNS_NOT_NULL_WITH_TAC_EXCLUSION_AND_ROAMING($techPackTables.getSucTables() "" $columnsToBeSelectedIMSI $columnsToBeSelected)
      ) as imsi_table_tmp group by #GET_COLUMNS_NO_COMMA_TRAILING($columnsToBeSelected)
    ) as imsi_table 
    on #GET_JOIN("data_table" "imsi_table" $columnsToBeSelected)
  ) as result_table
  left outer join #GET_OPERATOR_COUNTRY_TABLE("OP_COUNTRY_TABLE" $op_or_country)
  on #GET_JOIN("result_table" "OP_COUNTRY_TABLE" $columnsToBeSelected)

order by blocked_call desc

end